#pragma checksum "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "667fcb39417a4e83d52637c6557d2642bd04761c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Details_Details), @"mvc.1.0.view", @"/Views/Details/Details.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\_ViewImports.cshtml"
using StockDashboard;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\_ViewImports.cshtml"
using StockDashboard.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"667fcb39417a4e83d52637c6557d2642bd04761c", @"/Views/Details/Details.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5ec13e9e29a0ff15da18d2f49b86b2380c86a634", @"/Views/_ViewImports.cshtml")]
    public class Views_Details_Details : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
  
    ViewData["Title"] = "Stock Details";
    StockDetailsModel stockDetailsModel = Model;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    <div style=\"margin-left:auto;margin-right:auto;\">\r\n        <h1>");
#nullable restore
#line 7 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
        Write(stockDetailsModel.Symbol + " - " + stockDetailsModel.CompanyName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h1>
    </div>

<script src=""https://canvasjs.com/assets/script/canvasjs.min.js""></script>
<script type=""text/javascript"">


    window.onload = function () {
        var chart = new CanvasJS.Chart(""fullHistory"",
            {
                zoomEnabled:true,
                title: {
                    text:  ""All Historical Data""
                },
                legend: {
                    cursor: ""pointer"",
                    itemclick: function (e) {
                        //console.log(""legend click: "" + e.dataPointIndex);
                        //console.log(e);
                        if (typeof (e.dataSeries.visible) === ""undefined"" || e.dataSeries.visible) {
                            e.dataSeries.visible = false;
                        } else {
                            e.dataSeries.visible = true;
                        }

                        e.chart.render();
                    }
                },
                axisX:{
                    interva");
            WriteLiteral("lType: \"day\"\r\n                },\r\n                axisY:{\r\n                    maximum: ");
#nullable restore
#line 39 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.TwentyYearCandles.ViewMax);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                    minimum: ");
#nullable restore
#line 40 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.TwentyYearCandles.ViewMin);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                 },
                data: [
                    {
                        type: ""candlestick"",
                        xValueType: ""dateTime"",
		                showInLegend: true,
                        name: ""Candles"",
                        dataPoints: ");
#nullable restore
#line 48 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.TwentyYearCandles.JsonCandleSticks));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    },
                    {
                        type: ""line"",
                        showInLegend: true,
                        name: ""Closing Price"",
                        xValueType: ""dateTime"",
                        dataPoints: ");
#nullable restore
#line 55 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.TwentyYearCandles.JsonClosingPrice));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    }
                ]
            });

        var chart2 = new CanvasJS.Chart(""fiveYear"",
            {
                zoomEnabled:true,
                title: {
                    text:  ""Five Year Historical Data""
                },
                legend: {
                    cursor: ""pointer"",
                    itemclick: function (e) {
                        //console.log(""legend click: "" + e.dataPointIndex);
                        //console.log(e);
                        if (typeof (e.dataSeries.visible) === ""undefined"" || e.dataSeries.visible) {
                            e.dataSeries.visible = false;
                        } else {
                            e.dataSeries.visible = true;
                        }

                        e.chart.render();
                    }
                },
                axisX:{
                    intervalType: ""day""
                },
                axisY:{
                    maximum: ");
#nullable restore
#line 84 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.FiveYearCandles.ViewMax);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                    minimum: ");
#nullable restore
#line 85 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.FiveYearCandles.ViewMin);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                 },
                data: [
                    {
                        type: ""candlestick"",
                        xValueType: ""dateTime"",
		                showInLegend: true,
                        name: ""Candles"",
                        dataPoints: ");
#nullable restore
#line 93 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.FiveYearCandles.JsonCandleSticks));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    },
                    {
                        type: ""line"",
                        showInLegend: true,
                        xValueType: ""dateTime"",
                        name: ""Closing Price"",
                        dataPoints: ");
#nullable restore
#line 100 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.FiveYearCandles.JsonClosingPrice));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    }
                ]
            });

        var chart3 = new CanvasJS.Chart(""oneYear"",
            {
                zoomEnabled:true,
                title: {
                    text:  ""One Year Historical Data""
                },
                legend: {
                    cursor: ""pointer"",
                    itemclick: function (e) {
                        //console.log(""legend click: "" + e.dataPointIndex);
                        //console.log(e);
                        if (typeof (e.dataSeries.visible) === ""undefined"" || e.dataSeries.visible) {
                            e.dataSeries.visible = false;
                        } else {
                            e.dataSeries.visible = true;
                        }

                        e.chart.render();
                    }
                },
                axisX:{
                    intervalType: ""day""
                },
                axisY:{
                    maximum: ");
#nullable restore
#line 129 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.OneYearCandles.ViewMax);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                    minimum: ");
#nullable restore
#line 130 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.OneYearCandles.ViewMin);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                 },
                data: [
                    {
                        type: ""candlestick"",
                        xValueType: ""dateTime"",
		                showInLegend: true,
                        name: ""Candles"",
                        dataPoints: ");
#nullable restore
#line 138 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.OneYearCandles.JsonCandleSticks));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    },
                    {
                        type: ""line"",
                        showInLegend: true,
                        name: ""Closing Price"",
                        xValueType: ""dateTime"",
                        dataPoints: ");
#nullable restore
#line 145 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.OneYearCandles.JsonClosingPrice));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    }
                ]
            });

        var chart4 = new CanvasJS.Chart(""sixMonth"",
            {
                zoomEnabled:true,
                title: {
                    text:  ""Six Month Historical Data""
                },
                legend: {
                    cursor: ""pointer"",
                    itemclick: function (e) {
                        //console.log(""legend click: "" + e.dataPointIndex);
                        //console.log(e);
                        if (typeof (e.dataSeries.visible) === ""undefined"" || e.dataSeries.visible) {
                            e.dataSeries.visible = false;
                        } else {
                            e.dataSeries.visible = true;
                        }

                        e.chart.render();
                    }
                },
                axisX:{
                    intervalType: ""day""
                },
                axisY:{
                    maximum: ");
#nullable restore
#line 174 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.SixMonthCandles.ViewMax);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                    minimum: ");
#nullable restore
#line 175 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.SixMonthCandles.ViewMin);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                 },
                data: [
                    {
                        type: ""candlestick"",
                        xValueType: ""dateTime"",
		                showInLegend: true,
                        name: ""Candles"",
                        dataPoints: ");
#nullable restore
#line 183 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.SixMonthCandles.JsonCandleSticks));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    },
                    {
                        type: ""line"",
                        showInLegend: true,
                        name: ""Closing Price"",
                        xValueType: ""dateTime"",
                        dataPoints: ");
#nullable restore
#line 190 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.SixMonthCandles.JsonClosingPrice));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    }
                ]
            });

        var chart5 = new CanvasJS.Chart(""oneMonth"",
            {
                zoomEnabled:true,
                title: {
                    text:  ""One Month Historical Data""
                },
                legend: {
                    cursor: ""pointer"",
                    itemclick: function (e) {
                        //console.log(""legend click: "" + e.dataPointIndex);
                        //console.log(e);
                        if (typeof (e.dataSeries.visible) === ""undefined"" || e.dataSeries.visible) {
                            e.dataSeries.visible = false;
                        } else {
                            e.dataSeries.visible = true;
                        }

                        e.chart.render();
                    }
                },
                axisX:{
                    intervalType: ""day""
                },
                axisY:{
                    maximum: ");
#nullable restore
#line 219 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.OneMonthCandles.ViewMax);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                    minimum: ");
#nullable restore
#line 220 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.OneMonthCandles.ViewMin);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                 },
                data: [
                    {
                        type: ""candlestick"",
                        xValueType: ""dateTime"",
		                showInLegend: true,
                        name: ""Candles"",
                        dataPoints: ");
#nullable restore
#line 228 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.OneMonthCandles.JsonCandleSticks));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    },
                    {
                        type: ""line"",
                        showInLegend: true,
                        xValueType: ""dateTime"",
                        name: ""Closing Price"",
                        dataPoints: ");
#nullable restore
#line 235 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.OneMonthCandles.JsonClosingPrice));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    }
                ]
            });

        var chart6 = new CanvasJS.Chart(""twoWeeks"",
            {
                zoomEnabled:true,
                title: {
                    text:  ""Two Week Historical Data""
                },
                legend: {
                    cursor: ""pointer"",
                    itemclick: function (e) {
                        //console.log(""legend click: "" + e.dataPointIndex);
                        //console.log(e);
                        if (typeof (e.dataSeries.visible) === ""undefined"" || e.dataSeries.visible) {
                            e.dataSeries.visible = false;
                        } else {
                            e.dataSeries.visible = true;
                        }

                        e.chart.render();
                    }
                },
                axisX:{
                    intervalType: ""day""
                },
                axisY:{
                    maximum: ");
#nullable restore
#line 264 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.TwoWeekCandles.ViewMax);

#line default
#line hidden
#nullable disable
            WriteLiteral(",\r\n                    minimum: ");
#nullable restore
#line 265 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                        Write(stockDetailsModel.TwoWeekCandles.ViewMin);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                 },
                data: [
                    {
                        type: ""candlestick"",
                        xValueType: ""dateTime"",
		                showInLegend: true,
                        name: ""Candles"",
                        dataPoints: ");
#nullable restore
#line 273 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.TwoWeekCandles.JsonCandleSticks));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    },
                    {
                        type: ""line"",
                        showInLegend: true,
                        xValueType: ""dateTime"",
                        name: ""Closing Price"",
                        dataPoints: ");
#nullable restore
#line 280 "C:\Users\Gonzalo\Dropbox\GitHubProjects\stock-dashboard\StockDashboard\StockDashboard\Views\Details\Details.cshtml"
                               Write(Html.Raw(stockDetailsModel.TwoWeekCandles.JsonClosingPrice));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    }\r\n                ]\r\n            });\r\n\r\n        chart.render();\r\n        chart2.render();\r\n        chart3.render();\r\n        chart4.render();\r\n        chart5.render();\r\n        chart6.render();\r\n\r\n    }\r\n\r\n\r\n</script>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "667fcb39417a4e83d52637c6557d2642bd04761c21583", async() => {
                WriteLiteral(@"
    <div id=""fullHistory"" style=""height: 600px; width: 100%;"">
    </div>
    <div id=""fiveYear"" style=""height: 600px; width: 100%;"">
    </div>
    <div id=""oneYear"" style=""height: 600px; width: 100%;"">
    </div>
    <div id=""sixMonth"" style=""height: 600px; width: 100%;"">
    </div>
    <div id=""oneMonth"" style=""height: 600px; width: 100%;"">
    </div>
    <div id=""twoWeeks"" style=""height: 600px; width: 100%;"">
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
